<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 회원 등록 -->
	<insert id="insertMember" parameterType="memberVO">

		<!-- <selectKey keyProperty="memNo" resultType="long" order="BEFORE"> -->
		<!-- select member_seq.nextval from dual -->
		<!-- </selectKey> -->

		insert into member
		(mem_no, mem_id, mem_pw, mem_name, mem_birth,
		mem_phone,
		mem_email, mem_nick, level_no)
		values
		( member_seq.nextval,
		#{memId}, #{memPw}, #{memName}, #{memBirth},
		#{memPhone},
		#{memEmail},
		#{memNick}, #{levelNo} )

	</insert>


	<!-- ID 중복체크 -->
	<select id="checkId" parameterType="String" resultType="int">

		select
		count(*) from member
		where mem_id = #{mem_id}
		

	</select>


	<!-- 닉네임 중복체크 -->
	<select id="nickCheck" parameterType="String" resultType="int">

		select
		count(*) from member
		where mem_nick = #{mem_nick}

	</select>

	<!-- 회원정보가져오기 -->
	<select id="getMember" resultType="memberVO">
		select *
		from member
		where mem_id = #{memId}
		and mdelete_yn = 'N'
	</select>

	
	<!-- 관리자 정보 가져오기 -->
	<select id="getAdmin" resultType="adminVO">
	select admin_id adminId, admin_pass adminPw 
	from admin
	where admin_id = #{adminId}
	
	</select>

	<!-- 이메일 중복체크 -->
	<select id="emailCheck" parameterType="String" resultType="int">

		select count(*) from member
		where mem_email = #{memEmail}

	</select>

	<!-- 아이디 찾기 -->
	<select id="searchId" parameterType="MemberVO"
		resultType="MemberVO">
		select mem_id from member
		where mem_name = #{memName}
		and mem_phone = #{memPhone}
		and mdelete_yn = 'N'
	</select>

	<!-- 비밀번호 찾기 -->
	<select id="searchPw" parameterType="MemberVO"
		resultType="MemberVO">
		SELECT MEM_PW FROM MEMBER
		WHERE MEM_ID = #{memId}
		and mem_phone = #{memPhone}
	</select>
	
	
	<!--회원 정보수정 -->
	<update id="updateMember" parameterType="MemberVO">
		update member
		set mem_nick = #{memNick},
		mem_phone = #{memPhone},
		mem_email = #{memEmail},
		level_no = #{levelNo}
		where mem_id = #{memId}
	</update>
	
	
	<!--회원삭제 DEL_YN 업데이트문-->
	<update id="delMember" parameterType="MemberVO">
		update member
		set mdelete_yn = 'Y'
		where mem_id = #{memId}		
	</update>

	
</mapper>